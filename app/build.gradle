plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'


}
apply plugin: 'kotlin-kapt'
android {
    namespace 'com.grouptwo.lokcet'
    compileSdk 34

    defaultConfig {
        applicationId "com.grouptwo.lokcet"
        minSdk 27
        targetSdk 34
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = freeCompilerArgs + "-Xskip-prerelease-check"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {
    implementation libs.hilt.android
    implementation(libs.moshi.kotlin)
    implementation libs.androidx.navigation.compose
    implementation libs.firebase.auth.ktx
    implementation libs.androidx.constraintlayout
    implementation libs.firebase.storage.ktx
    implementation libs.androidx.lifecycle.runtime.compose
    implementation libs.androidx.work.runtime.ktx
    kapt libs.hilt.compiler
    implementation libs.glide
    implementation libs.gson
    kapt libs.glide.compiler
    implementation libs.androidx.core.ktx
    implementation libs.androidx.ui.text.google.fonts
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    implementation platform(libs.firebase.bom)
    //noinspection UseTomlInstead
    implementation 'com.google.firebase:firebase-analytics'
    //noinspection UseTomlInstead
    implementation("com.google.firebase:firebase-firestore")
    implementation libs.androidx.animation
    implementation libs.androidx.animation.core
    implementation libs.androidx.animation.graphics
    implementation libs.accompanist.permissions
    implementation libs.play.services.location
    implementation libs.maps.compose
    implementation libs.play.services.maps
    implementation libs.accompanist.pager
    implementation libs.google.accompanist.pager.indicators
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.accompanist.insets
    implementation libs.landscapist.glide
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.camera2
    // If you want to additionally use the CameraX Lifecycle library
    implementation libs.androidx.camera.lifecycle
    // If you want to additionally use the CameraX View class
    implementation libs.androidx.camera.view
    // If you want to additionally use the CameraX Extensions library
    implementation libs.androidx.camera.extensions
    implementation libs.ucrop
    implementation libs.androidx.paging.compose
    implementation libs.compose.emoji.picker
    // Coil for image loading in Widgets
    implementation libs.coil
    implementation(libs.firebase.messaging.ktx)
    implementation(libs.androidx.lifecycle.livedata.ktx)
    implementation libs.firebase.dynamic.links.ktx
    implementation libs.retrofit
    implementation libs.converter.gson


}

// Allow references to generated code
kapt {
    correctErrorTypes true
}